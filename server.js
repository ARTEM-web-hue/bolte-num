// server.js
const express = require('express');
const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');
const axios = require('axios'); // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GitHub API

const app = express();
const PORT = process.env.PORT || 10000;

// === –¢–æ–∫–µ–Ω—ã –∏ –∞–¥–º–∏–Ω—ã ===
const TOKEN = process.env.TELEGRAM_TOKEN;

// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–¥–º–∏–Ω–æ–≤
const ADMIN_IDS = (process.env.ADMIN_IDS || process.env.ADMIN_ID || '')
  .split(',')
  .map(id => id.trim())
  .filter(Boolean);

// === GitHub Settings for Auto-Save ===
const GITHUB_TOKEN = process.env.GITHUB_TOKEN; // –ù–æ–≤—ã–π: PAT
const GITHUB_REPO = process.env.GITHUB_REPO;   // –ù–æ–≤—ã–π: username/repo, e.g., ARTEM-web-hue/bolte-num
const GITHUB_FILE_PATH = process.env.GITHUB_FILE_PATH || 'players.json'; // –ù–æ–≤—ã–π: –ø—É—Ç—å –≤ —Ä–µ–ø–æ
const GITHUB_BRANCH = process.env.GITHUB_BRANCH || 'main'; // –ù–æ–≤—ã–π: –≤–µ—Ç–∫–∞

let githubFileSha = null; // –ë—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å SHA –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞ —Ñ–∞–π–ª–∞

if (!TOKEN) throw new Error('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_TOKEN');
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º ADMIN_IDS.length
if (ADMIN_IDS.length === 0) console.warn('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ADMIN_IDS ‚Äî –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub –Ω–∞—Å—Ç—Ä–æ–µ–∫
if (GITHUB_TOKEN && GITHUB_REPO) {
  console.log(`üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ GitHub –≤–∫–ª—é—á–µ–Ω–æ: ${GITHUB_REPO}/${GITHUB_FILE_PATH} (–≤–µ—Ç–∫–∞: ${GITHUB_BRANCH})`);
} else if (GITHUB_TOKEN || GITHUB_REPO) {
  console.warn('‚ö†Ô∏è –î–ª—è –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ GitHub –Ω—É–∂–Ω—ã –æ–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: GITHUB_TOKEN –∏ GITHUB_REPO');
}

const bot = new TelegramBot(TOKEN, { polling: true });

// === –§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ (–ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞) ===
const DATA_FILE = path.join(__dirname, 'players.json');

// === –ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ ===
let players = [];
async function loadPlayers() {
  try {
    // 1. –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å GitHub
    if (GITHUB_TOKEN && GITHUB_REPO) {
      console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ players.json —Å GitHub...');
      try {
        const response = await axios.get(`https://api.github.com/repos/${GITHUB_REPO}/contents/${GITHUB_FILE_PATH}`, {
          headers: {
            Authorization: `token ${GITHUB_TOKEN}`,
            Accept: 'application/vnd.github.v3+json',
          },
          params: {
            ref: GITHUB_BRANCH
          }
        });
        const content = Buffer.from(response.data.content, 'base64').toString('utf8');
        players = JSON.parse(content);
        githubFileSha = response.data.sha; // –°–æ—Ö—Ä–∞–Ω—è–µ–º SHA
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${players.length} –∏–≥—Ä–æ–∫–æ–≤ —Å GitHub (SHA: ${githubFileSha.substring(0, 7)})`);
        // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–¥–µ–π—Å—Ç–≤–∏—è
        fs.writeFileSync(DATA_FILE, content, 'utf8');
        return;
      } catch (githubErr) {
        if (githubErr.response && githubErr.response.status === 404) {
          console.log('‚ÑπÔ∏è –§–∞–π–ª players.json –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ GitHub. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π.');
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å GitHub:', githubErr.response?.data || githubErr.message);
        }
      }
    }

    // 2. –ï—Å–ª–∏ GitHub –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    if (fs.existsSync(DATA_FILE)) {
      console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ players.json —Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–∫–∞...');
      const data = fs.readFileSync(DATA_FILE, 'utf8');
      players = JSON.parse(data);
      console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${players.length} –∏–≥—Ä–æ–∫–æ–≤ —Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–∏—Å–∫–∞`);
    } else {
      // 3. –ï—Å–ª–∏ –∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      console.log('üÜï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤...');
      players = [
        { username: "atemmax", balance: 660 },
        { username: "loloky", balance: 76 },
        { username: "hentera", balance: 1200 },
        { username: "chessmaster", balance: 200 },
        { username: "grandpaw", balance: 1800 }
      ];
      await savePlayers(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω –Ω–∞—á–∞–ª—å–Ω—ã–π players.json');
    }
  } catch (err) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', err);
    players = []; // fallback
  }
}

// === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª (–∏ –≤ GitHub, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ) ===
async function savePlayers() {
  try {
    const jsonData = JSON.stringify(players, null, 2);
    
    // 1. –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
    fs.writeFileSync(DATA_FILE, jsonData, 'utf8');
    console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ');

    // 2. –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ GitHub
    if (GITHUB_TOKEN && GITHUB_REPO) {
      const contentBase64 = Buffer.from(jsonData).toString('base64');
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
      const playerCount = players.length;
      const totalBalance = players.reduce((sum, p) => sum + p.balance, 0);
      const commitMessage = `Update players.json: ${playerCount} players, total ${totalBalance} usov`;

      const url = `https://api.github.com/repos/${GITHUB_REPO}/contents/${GITHUB_FILE_PATH}`;
      
      const data = {
        message: commitMessage,
        content: contentBase64,
        branch: GITHUB_BRANCH
      };

      // –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª, –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ SHA –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      if (githubFileSha) {
        data.sha = githubFileSha;
      }

      try {
        const response = await axios.put(url, data, {
          headers: {
            Authorization: `token ${GITHUB_TOKEN}`,
            Accept: 'application/vnd.github.v3+json',
          }
        });
        
        githubFileSha = response.data.content.sha; // –û–±–Ω–æ–≤–ª—è–µ–º SHA
        console.log(`‚òÅÔ∏è –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ GitHub (–Ω–æ–≤—ã–π SHA: ${githubFileSha.substring(0, 7)})`);
      } catch (githubErr) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ GitHub:', githubErr.response?.data || githubErr.message);
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫, –µ—Å–ª–∏ GitHub –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
      }
    }
  } catch (err) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', err);
  }
}

// === –ó–≤–∞–Ω–∏—è ===
const ranks = [
  { min: 1500, name: "–ó–æ–ª–æ—Ç–æ–µ", class: "gold" },
  { min: 1000, name: "–°–µ—Ä–µ–±—Ä—è–Ω–æ–µ", class: "silver" },
  { min: 500, name: "–ë—Ä–æ–Ω–∑–æ–≤–æ–µ", class: "bronze" },
  { min: 250, name: "–ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–µ", class: "metal" },
  { min: 100, name: "–î–µ—Ä–µ–≤—è–Ω–Ω–æ–µ", class: "wood" },
  { min: 0, name: "–ù–æ–≤–∏—á–æ–∫", class: "wood" }
];

function getRank(balance) {
  for (let r of ranks) {
    if (balance >= r.min) return r;
  }
  return ranks[ranks.length - 1];
}

// === –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ===
loadPlayers().then(() => {
  console.log("üèÅ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ë–æ—Ç –≥–æ—Ç–æ–≤.");
});

// === –ö–æ–º–∞–Ω–¥–∞: /bal username ===
bot.onText(/\/bal\s+(\w+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const username = match[1].toLowerCase();

  const player = players.find(p => p.username.toLowerCase() === username);
  const rank = player ? getRank(player.balance) : null;

  if (player) {
    bot.sendMessage(chatId, `
üìä <b>–ò–≥—Ä–æ–∫:</b> ${player.username}
üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> ${player.balance} —É—Å–æ–≤
üéñÔ∏è <b>–ó–≤–∞–Ω–∏–µ:</b> ${rank.name}
    `.trim(), { parse_mode: 'HTML' });
  } else {
    bot.sendMessage(chatId, `‚ùå –ò–≥—Ä–æ–∫ "${username}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
  }
});

// === –ö–æ–º–∞–Ω–¥–∞: /json view ===
bot.onText(/\/json\s+view/i, (msg) => {
  const chatId = msg.chat.id;
  const userId = String(msg.from.id);
  const isAdmin = ADMIN_IDS.includes(userId);

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  if (ADMIN_IDS.length > 0 && !isAdmin) {
    bot.sendMessage(chatId, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.');
    return;
  }

  try {
    const json = JSON.stringify(players, null, 2);
    const content = json.length > 4000
      ? `üìÑ JSON —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (${json.length} —Å–∏–º–≤–æ–ª–æ–≤). –ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Å–∞–π—Ç–µ.`
      : `\`\`\`json\n${json}\n\`\`\``;

    bot.sendMessage(chatId, content, { parse_mode: 'Markdown' });
  } catch (err) {
    bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON');
  }
});

// === –ö–æ–º–∞–Ω–¥–∞: /json edit ===
bot.onText(/\/json\s+edit([\s\S]*)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userId = String(msg.from.id);
  const isAdmin = ADMIN_IDS.includes(userId);

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  if (ADMIN_IDS.length > 0 && !isAdmin) {
    bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å JSON.');
    return;
  }

  const rawJson = match[1].trim();

  if (!rawJson) {
    bot.sendMessage(chatId, 'üìå –ò—Å–ø–æ–ª—å–∑—É–π: `/json edit {–Ω–æ–≤—ã–π JSON}`');
    return;
  }

  try {
    const newPlayers = JSON.parse(rawJson);
    if (!Array.isArray(newPlayers)) {
      bot.sendMessage(chatId, '‚ùå –û–∂–∏–¥–∞–ª—Å—è –º–∞—Å—Å–∏–≤ –∏–≥—Ä–æ–∫–æ–≤.');
      return;
    }

    players = newPlayers;
    savePlayers(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    bot.sendMessage(chatId, `‚úÖ JSON –æ–±–Ω–æ–≤–ª—ë–Ω. –ò–≥—Ä–æ–∫–æ–≤: ${players.length}`);
  } catch (err) {
    bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:\n${err.message}`);
  }
});

// === –ù–û–í–ê–Ø –ö–û–ú–ê–ù–î–ê: /nule ===
bot.onText(/\/nule/i, (msg) => {
  const chatId = msg.chat.id;
  const userId = String(msg.from.id);
  const isAdmin = ADMIN_IDS.includes(userId);

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  if (ADMIN_IDS.length > 0 && !isAdmin) {
    bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –æ–±–Ω—É–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å—ã.');
    return;
  }

  const count = players.length;
  players.forEach(p => p.balance = 0);
  savePlayers(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é

  bot.sendMessage(chatId, `‚úÖ –ë–∞–ª–∞–Ω—Å—ã –≤—Å–µ—Ö ${count} –∏–≥—Ä–æ–∫–æ–≤ –æ–±–Ω—É–ª–µ–Ω—ã.`);
});

// === –ù–û–í–ê–Ø –ö–û–ú–ê–ù–î–ê: /com ===
bot.onText(/\/com/i, (msg) => {
  const chatId = msg.chat.id;
  const userId = String(msg.from.id);
  const isAdmin = ADMIN_IDS.includes(userId);

  let helpText = `
üéÆ <b>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>

üîπ <code>Update balance lichess –Ω–∏–∫ +100</code>
   –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞

üîπ <code>/bal –Ω–∏–∫</code>
   –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞
`;

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
  if (isAdmin || ADMIN_IDS.length === 0) {
    helpText += `
üîê <b>–ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>

üîπ <code>/json view</code>
   –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å JSON –¥–∞–Ω–Ω—ã—Ö

üîπ <code>/json edit [...]</code>
   –ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤

üîπ <code>/nule</code>
   –û–±–Ω—É–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å—ã –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤

üîπ <code>/com</code>
   –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
`;
  }

  bot.sendMessage(chatId, helpText, { parse_mode: 'HTML' });
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ Update balance ===
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = String(msg.from.id); // –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —ç—Ç–æ –µ—Å—Ç—å
  const text = msg.text?.trim();

  // === –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ (–µ—Å–ª–∏ ADMIN_IDS –∑–∞–¥–∞–Ω) ===
  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  const isAdmin = ADMIN_IDS.includes(userId);
  if (text?.startsWith('Update balance lichess ')) {
    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if (ADMIN_IDS.length > 0 && !isAdmin) {
      bot.sendMessage(chatId, '‚ùå –û–±–Ω–æ–≤–ª—è—Ç—å –±–∞–ª–∞–Ω—Å –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.');
      return;
    }

    const regex = /^Update balance lichess (\w+) ([+\-]?\d+)$/;
    const match = text.match(regex);

    if (!match) {
      bot.sendMessage(chatId, '‚ùå –§–æ—Ä–º–∞—Ç: `Update balance lichess –Ω–∏–∫ +100` –∏–ª–∏ `-50`', { parse_mode: 'Markdown' });
      return;
    }

    const username = match[1].toLowerCase();
    const delta = parseInt(match[2]);

    const player = players.find(p => p.username.toLowerCase() === username);
    if (!player) {
      const newPlayer = { username, balance: delta };
      players.push(newPlayer);
      bot.sendMessage(chatId, `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${username} (${delta} —É—Å–æ–≤)`);
    } else {
      const oldBalance = player.balance;
      player.balance += delta;
      const newRank = getRank(player.balance);
      const oldRank = getRank(oldBalance);

      let msgText = `‚úÖ ${username}: ${oldBalance} ‚Üí ${player.balance} —É—Å–æ–≤ (${delta > 0 ? '+' : ''}${delta})`;

      if (newRank.name !== oldRank.name) {
        msgText += `\nüéâ –ü–æ–≤—ã—à–µ–Ω–∏–µ! ${oldRank.name} ‚Üí ${newRank.name}`;
      }

      bot.sendMessage(chatId, msgText);
    }

    savePlayers(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
  }
});

// === API –∏ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ===
app.get('/api/players', (req, res) => {
  res.json(players);
});

// === –°—Ç—Ä–∞–Ω–∏—Ü–∞ /info ===
app.get('/info', (req, res) => {
  res.send(`
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>‚ÑπÔ∏è –û –∫–ª—É–±–µ "–°–∞–º–∏ —Å —É—Å–∞–º–∏"</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
      color: #fff;
      margin: 0;
      padding: 20px;
      text-align: center;
    }
    h1 {
      text-shadow: 2px 2px 5px rgba(0,0,0,0.5);
    }
    .container {
      max-width: 800px;
      margin: 0 auto;
      background: rgba(0, 0, 0, 0.3);
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.3);
    }
    .btn {
      display: block;
      width: 90%;
      margin: 10px auto;
      padding: 15px;
      background: #2c3e50;
      color: white;
      text-decoration: none;
      font-size: 18px;
      border-radius: 10px;
      transition: 0.3s;
    }
    .btn:hover {
      background: #34495e;
      transform: scale(1.02);
    }
    .btn-main {
      background: #e67e22;
      font-size: 22px;
      font-weight: bold;
    }
    .btn-main:hover {
      background: #d35400;
    }
    p {
      font-size: 18px;
      line-height: 1.6;
    }
    a {
      color: #f1c40f;
      text-decoration: none;
    }
    a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>‚ÑπÔ∏è –û –∫–ª—É–±–µ "–°–∞–º–∏ —Å —É—Å–∞–º–∏"</h1>

    <a href="https://lichess.org/@/Rondom12345678" class="btn">üëë –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–ª—É–±–∞</a>
    <a href="https://lichess.org/@/Breshko_Savva" class="btn">ü§ù 1 –ø–æ–º–æ—â–Ω–∏–∫ –∫–ª—É–±–∞</a>
    <a href="https://lichess.org/@/Mister204" class="btn">ü§ù 2 –ø–æ–º–æ—â–Ω–∏–∫ –∫–ª—É–±–∞</a>
    <a href="https://lichess.org/@/YaDeni" class="btn">üí™ –¢–∞—â–µ—Ä –∫–ª—É–±–∞</a>
    <a href="https://lichess.org/@/atemmax" class="btn">üåü –°—Ç–∞—Ä—ã–π –¥—Ä—É–≥ –º–Ω–æ–≥–æ –¥–µ–ª–∞–ª –¥–ª—è 1 –∫–ª—É–±–∞</a>

    <a href="https://lichess.org/team/dNnzQFa3" class="btn btn-main">üèÜ –ö–ª—É–±</a>

    <p>
      –ö–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –º—ã —Ä–∞–¥—ã —É –Ω–∞—Å –∫—É—á–∞ –≤—Å–µ–≥–æ! –ß–∏—Ç–∞–π—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–∞–ª—å—à–µ –∏ –≤—ã –≤—Å—ë –ø–æ–π–º—ë—Ç–µ!
    </p>
    <p>
      –ú—ã –æ—á–µ–Ω—å –¥—Ä—É–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!!! –£ –Ω–∞—Å 100+ –∏–≥—Ä–æ–∫–æ–≤ –∑–∞ 13 –¥–Ω–µ–π!
    </p>
    <p>
      –ù–∞—à –∫–ª—É–± —Å—Ç–∞—Ä—ã–π, —É –Ω–µ–≥–æ –µ—Å—Ç—å —Å—Ç–∞—Ä—ã–µ –¥—Ä—É–∑—å—è:
      <a href="https://lichess.org/team/NW5eTSTC">NW5eTSTC</a>
    </p>
    <p>
      1 –∫–ª—É–±: <a href="https://lichess.org/team/2Jic5G62">2Jic5G62</a><br>
      –≤–æ—Ç 2: <a href="https://lichess.org/team/r2jBMkqQ">r2jBMkqQ</a><br>
      –≤–æ—Ç 3: <a href="https://lichess.org/team/EQeKftyd">EQeKftyd</a><br>
      –≤–æ—Ç 4 –æ–Ω –∂–∏–≤!: <a href="https://lichess.org/team/fAEHcVRb">fAEHcVRb</a><br>
      –≤–æ—Ç 5: <a href="https://lichess.org/team/3WtxMOsQ">3WtxMOsQ</a>
    </p>
    <p>
      –ò –æ—Å—Ç–∞–ª—Å—è –Ω–∞—à –∫–ª—É–± ‚Äî 6 –≤–µ—Ä—Å–∏—è, –Ω–æ –±—ã–ª –µ—â–µ –æ–¥–∏–Ω –∫–ª—É–±, –≤ –∫–æ—Ç–æ—Ä–æ–º —è —Å–æ—Ö—Ä–∞–Ω–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ 1 —Å—Å—É.
    </p>
    <p>
      –ú–Ω–µ –∂–∞–ª—å, —á—Ç–æ –Ω–∞—à –∫–ª—É–± —Å—Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–∂–∏–ª. –ù–æ –º—ã –Ω–µ —É–º—Ä—ë–º ‚Äî –Ω–∞ –≤—Å–µ–≥–¥–∞!
    </p>
  </div>
</body>
</html>
  `);
});

app.use(express.static('public'));

app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
